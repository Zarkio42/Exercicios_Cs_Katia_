<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>